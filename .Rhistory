library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size <= 100500, r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
cran3 <- mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran = tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, avg_bytes=mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
?n
source('/tmp/RtmpmjAZUh/summarize1.R')
source('~/.active-rstudio-document')
pack_sum
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
source('/tmp/RtmpmjAZUh/chain1.R')
submit()
submit()
submit()
submit()
submit()
install.package("tidyr")
install()
?install
install.package("tidyr")
install.packages("tidyr")
setwd("~/Documents/Reproducible Research/Project1/RepData_PeerAssessment1")
df <-read.csv("activity.csv")
total.steps <- aggregate(df$steps, list(df$date), sum)
hist(total.steps$x, 40, xlab="total steps", main="distribution of total steps",
ylab="number of days")
mean_number_of_steps = mean(total.steps$x, na.rm=T)
median_number_of_steps = median(total.steps$x, na.rm=T)
mean_number_of_steps
median_number_of_steps
per.interval <- aggregate(df$steps, list(df$interval), mean, na.rm=T)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="average steps per time interval", type="l")
which.max(per.interval$x)
sum(is.na(df$steps))
for (i in 1:nrow(df)) { # TODO: can this be vectorized?
if (is.na(df$steps[i])) { # replace NA value with mean for this interval
df$steps[i] = per.interval$x[which(df$interval[i] == per.interval$Group.1)]
}
}
total.steps <- aggregate(df$steps, list(df$date), sum)
hist(total.steps$x, 40, xlab="total steps", main="distribution of total steps (imputed)",
ylab="number of days")
mean_number_of_steps = mean(total.steps$x)
median_number_of_steps = median(total.steps$x)
median_number_of_steps
mean_number_of_steps
df$date <- as.Date(df$date) # convert to date structure
wkdys <- weekdays(df$date)
sat = wkdys == "Saturday"
sun = wkdys == "Sunday"
weekend = sat + sun
weekend = factor(weekend)
dfwk = df[weekend == 0,] # data frame of weekday values only
dfwe = df[weekend == 1,] # data frame of weekend values only
nrow(dfwk)
nrow(dfwe)
par(mfrow=c(2,1))
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="ave steps per interval (weekend)", type="l")
per.interval <- aggregate(dfwe$steps, list(dfwe$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="ave steps per interval (weekend)", type="l")
par(mfrow=c(1,1))
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="ave steps per interval (weekday)", type="l", color="Red")
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="ave steps per interval (weekday)", type="l", col="Red")
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, type="l", col="Blue")
per.interval <- aggregate(dfwe$steps, list(dfwe$interval), mean)
plot(per.interval$Group.1, per.interval$x, type="l", col="Red")
?plot
par(mfrow=c(1,2))
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="ave steps per interval (weekday)", type="l")
per.interval <- aggregate(dfwe$steps, list(dfwe$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="ave steps per interval (weekend)", type="l")
par(mfrow=c(1,2))
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="Weekdays", type="l", col="Red")
per.interval <- aggregate(dfwe$steps, list(dfwe$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals",
main="Weekends", type="l", col="Blue")
per.interval <- aggregate(dfwk$steps, list(dfwk$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab="average steps",
main="Weekdays", type="l", col="Red")
per.interval <- aggregate(dfwe$steps, list(dfwe$interval), mean)
plot(per.interval$Group.1, per.interval$x, xlab="intervals", ylab=NA,
main="Weekends", type="l", col="Blue")
source('~/.active-rstudio-document')
par(mfcol=c(2,2), mar=c(4,4,0.5,0.5), oma=c(1.5,2,1,1))
par(mfcol=c(1,2), mar=c(4,4,0.5,0.5), oma=c(1.5,2,1,1))
source('~/.active-rstudio-document')
par(mfcol=c(1,2), mar=c(4,4,0.5,0.5), oma=c(1.5,2,1,2))
source('~/.active-rstudio-document')
par(mfcol=c(1,2), mar=c(4,4,0.5,4), oma=c(1.5,2,1,2))
source('~/.active-rstudio-document')
par(mfcol=c(1,2), mar=c(4,4,4,0), oma=c(1.5,2,1,2))
source('~/.active-rstudio-document')
par(mfcol=c(1,2), mar=c(3,3,3,0), oma=c(1.5,2,1,2))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
